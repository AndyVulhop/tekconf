@using System.Configuration
@using System.Web.Optimization
@using TekConf.UI.Web.Controllers
@model List<TekConf.RemoteData.Dtos.v1.ConferencesDto>

@{
	Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">

	<title>Conferences - tekconf</title>
	<link rel="shortcut icon" type="image/x-icon" href="~/favicon.ico">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<meta name="apple-mobile-web-app-capable" content="yes">

	<link href="http://fonts.googleapis.com/css?family=Open+Sans:400italic,600italic,400,600" rel="stylesheet">

	@Styles.Render("~/css/conferences/index")
	<style>
		.ui-autocomplete-loading {
			background: white url('images/ui-anim_basic_16x16.gif') right center no-repeat;
		}

		.effect {
			height: 200px;
		}
	</style>
	<!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
	<!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

	<!-- API NOTE : This page is generated by calling http://api.tekconf.com/v1/conferences -->

</head>

<body>
	@Html.Partial("Header")

	<div id="subheader">
		<div class="inner">
			<div class="container">
				<h1>Conferences</h1>
			</div>
			<!-- /.container -->
		</div>
		<!-- /inner -->
	</div>
	<!-- /subheader -->

	<div id="subpage">
		<div class="container">
			<div class="row">
				<a href="#" id="showFilter">Show/Hide Filter and Search</a>
			</div>
			<div class="row well" id="filter" style="padding-bottom: 10px;">
				@using (Html.BeginForm())
				{
					var views = new List<SelectListItem>() {
						new SelectListItem(){Text = "Thumbnails",Value = "thumbnails",Selected = !ViewBag.ShowTable},
						new SelectListItem(){Text = "Table", Value = "table", Selected = ViewBag.ShowTable}
					};
					ConferencesFilter filter;
					if (ViewBag.Filter != null)
					{
						filter = ViewBag.Filter as ConferencesFilter ?? new ConferencesFilter();
					}
					else
					{
						filter = new ConferencesFilter();
					}
					var sorts = new List<SelectListItem>()
						{
							new SelectListItem() {Text = "Start Date", Value = "startDate"},
							new SelectListItem() {Text = "Name", Value = "name"},
							new SelectListItem() {Text = "Call for Speakers Opening", Value = "callForSpeakersOpeningDate"},
							new SelectListItem() {Text = "Call for Speakers Closing", Value = "callForSpeakersClosingDate"},
							new SelectListItem() {Text = "Tickets on Sale Date", Value = "registrationOpens"},
							new SelectListItem() {Text = "Date Added", Value = "dateAdded"}
						};
					var sortBy = sorts.FirstOrDefault(x => x.Value == filter.sortBy);
					if (sortBy != null)
					{
						sortBy.Selected = true;
					}
					var viewAs = views.FirstOrDefault(x => x.Value == filter.viewAs);
					if (viewAs != null)
					{
						viewAs.Selected = true;
					}		  
					<div class="row">
						<div class="alert alert-success">
							@Model.Count() Conferences shown
						</div>
					</div>
					<div class="row">     
						<div class="span4">
							View As : @Html.DropDownList("viewAs", views, new { @onchange = "this.form.submit();", style = "width:120px;" })
							<br />
							Sort By	: @Html.DropDownList("sortBy", sorts, new { @onchange = "this.form.submit();" })
						</div>  
						<div class="span3">
							@Html.CheckBox("showPastConferences", filter.showPastConferences, new { @onchange = "this.form.submit();" })<text> Show Past Conferences?</text>
							<br/>
							@Html.CheckBox("showOnlyOpenCalls", filter.showOnlyOpenCalls, new { @onchange = "this.form.submit();" })<text> Show Only Open Calls?</text>
							<br/>
							@Html.CheckBox("showOnlyOnSale", filter.showOnlyOnSale, new { @onchange = "this.form.submit();" })<text> Show Only On Sale?</text>
						</div>
						<div class="span5 searchBox input-append ui-widget">
							@Html.TextBox("search", filter.search, new { @class = "span2 search-query" })
							<button class="btn" onclick="this.form.submit()" id="searchButton" style="margin-right: 30px;">Search</button>
						</div>
					</div>
				}

			</div>

				<div class="row">
					@if (ViewBag.ShowTable)
		 {
						<div class="span12">
							<table class="table">
								<tbody>
									@foreach (var conference in Model)
				 {
										<tr>
											<td><a href="~/Conferences/@conference.slug" class="btn btn-primary btn-mini">View Conference</a></td>
											<td>@conference.name</td>
											<td>@HtmlHelpers.FormatDateRange(conference.start, conference.end)</td>
											<td>@HtmlHelpers.FormatAddress(conference.address)</td>
										</tr>
				 }
								</tbody>
							</table>
						</div>
		 }
		 else
		 {
						<ul class="thumbnails">

							@if (Model != null)
			 {
				 foreach (var conference in Model)
				 {
                            
									<li class="span3">

										<div class="thumbnail" style="height: 590px; position: relative;">
											@if (conference.IsOnSale())
					 {
												<img src="~/img/OnSale.png" class="overlay overlay-onsale" />
					 }
											<img src="@conference.imageUrl" alt="@conference.name">
											@if (conference.IsOpenCallForSpeakers())
					 {
												<img src="~/img/OpenCall.png" class="overlay overlay-opencall overlay-right" />
					 }
											<div class="caption">
												<h3>@conference.name</h3>
												<h4>@HtmlHelpers.FormatDateRange(conference.start, conference.end)<br />@conference.address.City<text> </text>@conference.address.State @conference.address.Country</h4>
												<p style="">
													@conference.description
												</p>
												<p><strong>@conference.numberOfSessions Sessions</strong></p>
												<div style="position: absolute; bottom: 10px;">
													<a href="~/Conferences/@conference.slug" class="btn btn-primary">View Conference</a> <a href="#" class="btn">I'm Attending!</a>
												</div>
											</div>
										</div>
									</li>
				 }
			 }
						</ul>
		 }



				</div>

		</div>
		<!-- /container -->

	</div>
	<!-- /subpage -->

	@Html.Partial("Extra")

	@Html.Partial("Footer")

	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryMigrate")
	@Scripts.Render("~/js/common")
	@Scripts.Render("~/bundles/jqueryUI")

	<script type="text/javascript" language="javascript">
		$(function () {
			// run the currently selected effect
			function runEffect() {
				// get effect type from
				var selectedEffect = 'blind';

				// most effect types need no options passed by default
				var options = {};
				// some effects have required parameters
				if (selectedEffect === "scale") {
					options = { percent: 0 };
				} else if (selectedEffect === "size") {
					options = { to: { width: 200, height: 60 } };
				}

				// run the effect
				$("#filter").toggle(selectedEffect, options, 500, function () {
					var currentDisplay = $("#filter").css('display');
					$.cookie('searchFilterToggle', currentDisplay, { expires: 7 });
				});

			};

			// set effect from select menu value
			//$("#filter").hide();
			$(document).on("click", "#showFilter", function () {
				runEffect();
				return false;
			});

		});

		$(function () {
			var onLoadFilterDisplay = $.cookie('searchFilterToggle');

			if (onLoadFilterDisplay === "none") {
				$("#filter").hide();
			} else {
				$("#filter").show();
			}
			$("#search").autocomplete({
				messages: {
					noResults: null,
					results: function () { }
				},
				source: function (request, response) {
					$.ajax({
						url: '@(ConfigurationManager.AppSettings["BaseUrl"])/v1/conferences/search?searchTerm=' + request.term + '&showPastConferences=' + $('#showPastConferences').is(':checked') + '&format=json',
						dataType: "jsonp",
						data: request,
						success: function (data) {
							response($.map(data, function (item) {
								return {
									label: item.label,
									value: item.value
								}
							}));
						}
					});
				},
				minLength: 2,
				select: function (event, ui) {
					this.value = ui.item.value;
					$('#searchButton').click();
				},
				open: function () {
					$(this).removeClass("ui-corner-all").addClass("ui-corner-top");
				},
				close: function () {
					$(this).removeClass("ui-corner-top").addClass("ui-corner-all");
				}
			});



		});
	</script>
</body>
</html>
